{
  "id": "Ankr",
  "name": "Ankr Protocol",
  "index": 6,
  "website": "https://github.com/LevelUpWeb3/Ankr-Mission",
  "heroImage": "/heros/test.jpg",
  "docs": "https://github.com/orgs/LevelUpWeb3/repositories",
  "summary": "Take this mission to get started with Ankr",
  "labels": [
    "Defi"
  ],
  "content": {
    "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Get Started with Ankr.js\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Welcome to the level 1 of an exciting mission of Level Up!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ankr.js is a JS library that lets user users interact with Ankr's Advanced APIs. In this guide, you'll learn how to retrieve NFTs, belonging to a particular user.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"High Level Structure\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"GitHub Repository:\"\n        }), \" Start by exploring the GitHub repo and README.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Guide:\"\n        }), \" Move on to the guide where you will find how to retrieve NFTs that a particular user owns by using Ankr.js.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Mission\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Installing \", _jsx(_components.code, {\n          children: \"ankr.js\"\n        }), \" package.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Building a simple JS code to query and retrieve NFTs.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
    "frontmatter": {},
    "scope": {}
  }
}