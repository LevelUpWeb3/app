{
  "id": "variables",
  "name": "Variables",
  "index": 5,
  "lesson": 5,
  "summary": "Introduction to Solidity variables",
  "labels": [
    "solidity"
  ],
  "content": {
    "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Variables\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"There are 3 types of variables in Solidity:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"State Variables\", \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"Declared outside of functions\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 7,\n            columnNumber: 4\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: \"Stored on the blockchain\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 8,\n            columnNumber: 4\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 7,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"Local Variables\", \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"Declared inside functions\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 10,\n            columnNumber: 4\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: \"Not stored on the blockchain\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 11,\n            columnNumber: 4\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 9,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"Global Variables\", \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"Provides information about the blockchain\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 13,\n            columnNumber: 4\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ncontract Variables {\\n    // State variables are stored on the blockchain.\\n    string public text = \\\"Hello\\\";\\n    uint256 public num = 123;\\n\\n    function doSomething() public {\\n        // Local variables are not saved to the blockchain.\\n        uint256 i = 456;\\n\\n        // Here are some global variables\\n        uint256 timestamp = block.timestamp; // Current block timestamp\\n        address sender = msg.sender; // address of the caller\\n    }\\n}\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
    "frontmatter": {},
    "scope": {}
  }
}