{
  "id": "constants",
  "name": "Constants",
  "index": 3,
  "lesson": 3,
  "summary": "Introduction to Solidity constants",
  "labels": [
    "solidity"
  ],
  "content": {
    "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Constants\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Constants are variables that cannot be modified. Constants should be named with all capital letters with underscores separating words. Examples: \", _jsx(_components.code, {\n        children: \"MAX_BLOCKS\"\n      }), \", \", _jsx(_components.code, {\n        children: \"TOKEN_NAME\"\n      }), \", \", _jsx(_components.code, {\n        children: \"TOKEN_TICKER\"\n      }), \", \", _jsx(_components.code, {\n        children: \"CONTRACT_VERSION\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Their value is hard coded and using constants can save gas cost.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-solidity\",\n        children: \"// SPDX-License-Identifier: MITpragma solidity ^0.8.24;\\n\\ncontract Constants {\\n    // coding convention to uppercase constant variablesaddress public constant MY_ADDRESS =\\n        0x777788889999AaAAbBbbCcccddDdeeeEfFFfCcCc;\\n    uint256 public constant MY_UINT = 123;\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
    "frontmatter": {},
    "scope": {}
  }
}