{
  "id": "constants",
  "name": "Constants",
  "index": 3,
  "lesson": 3,
  "summary": "Introduction to Solidity constants",
  "labels": [
    "solidity"
  ],
  "content": {
    "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"img\", {\n      src: \"/images/solidity/constants.png\",\n      alt: \"Constants\",\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      }\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h1, {\n      children: \"Constants\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Constants are variables that cannot be modified. Constants should be named with all capital letters with underscores separating words. Examples: \", _jsxDEV(_components.code, {\n        children: \"MAX_BLOCKS\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 146\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"TOKEN_NAME\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 160\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"TOKEN_TICKER\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 174\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"CONTRACT_VERSION\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 190\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Their value is hard coded and using constants can save gas cost.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"// SPDX-License-Identifier: MITpragma solidity ^0.8.24;\\n\\ncontract Constants {\\n    // coding convention to uppercase constant variablesaddress public constant MY_ADDRESS =\\n        0x777788889999AaAAbBbbCcccddDdeeeEfFFfCcCc;\\n    uint256 public constant MY_UINT = 123;\\n}\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
    "frontmatter": {},
    "scope": {}
  }
}