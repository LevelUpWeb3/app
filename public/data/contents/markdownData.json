[
  {
    "id": "exploring-solidity-objects-address-part-1",
    "name": "Exploring Solidity Objects: Address - Part 1",
    "index": 1,
    "summary": "Dive into the world of Solidity in pursuit of leveling up! Starting with Address object.",
    "author": "RH",
    "authorIcon": "https://pbs.twimg.com/profile_images/1751242830398287872/8VKShh46.jpg",
    "authorLink": "https://x.com/rh_bdl",
    "published": "Jul 03, 2024",
    "readTime": "3 min read",
    "labels": [
      "Smart Contract"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h3: \"h3\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {ContentCopy} = _components;\n  if (!ContentCopy) _missingMdxReference(\"ContentCopy\", true, \"12:1-20:26\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.p, {\n      children: [\"If you have been tinkering with Solidity, you might have used or came across the \", _jsxDEV(_components.code, {\n        children: \"address\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 4,\n        columnNumber: 82\n      }, this), \" object in Solidity. Common use cases of this object includes reading \", _jsxDEV(_components.code, {\n        children: \"address\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 4,\n        columnNumber: 161\n      }, this), \" balance, and sending tokens.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In this article, we will explore the different members of \", _jsxDEV(_components.code, {\n        children: \"address\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 59\n      }, this), \" while referencing Solidity's \", _jsxDEV(_components.a, {\n        href: \"https://docs.soliditylang.org/en/latest/cheatsheet.html#members-of-address\",\n        children: \"docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 98\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: _jsxDEV(_components.strong, {\n        children: \"1. Balance\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 4\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The balance member provides access to read balance of address in Wei (1 Ether = 10^18 Wei).\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `function retrieveBalance() public view returns (uint256) {\n    //returns ETH balance of deployed contract in Wei\n    return address(this).balance;\n}\n\nfunction retrieveUserBalance(address user) public view returns (uint256) {\n    //returns ETH balance of user's address in Wei\n    return address(user).balance;\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"retrieveBalance()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this), \" function is an example of a gotcha that catches new Solidity devs off-guard. It is not unusual to assume that \", _jsxDEV(_components.code, {\n        children: \"address(this).balance\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 131\n      }, this), \" would return the balance of our address. In reality, it is the balance of the smart contract itself that is read.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: _jsxDEV(_components.strong, {\n        children: \"2. Code\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"code\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), \" member allows us to query the deployed contract’s bytecode information.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `function retrieveCode() public view returns (bytes memory) {\n    //returns EVM bytecode\n    return address(this).code;\n}\n\nfunction retrieveCodehash() public view returns (bytes32) {\n    //returns Keccak-256 hash of the EVM bytecode\n    return address(this).codehash;\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"retrieveCode()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 38,\n        columnNumber: 1\n      }, this), \" queries the EVM bytecode and in this example, the output looks something like this “0x60806040…4300081a0033”.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"This is useful for contract verification purposes. \", _jsxDEV(_components.a, {\n        href: \"https://etherscan.io/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2#code\",\n        children: \"Here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 40,\n        columnNumber: 52\n      }, this), \" is an example of WETH’s deployed contract in Etherscan. Scroll below to see the Deployed Bytecode’s output.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"retrieveCodehash()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 1\n      }, this), \" simply provides the Keccak-256 hash of the output. It provides a more efficient way to verify the deployed contract as it is cheaper in terms of gas costs.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: _jsxDEV(_components.strong, {\n        children: \"3. Transfer, Send & Call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 4\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"• Transfer & Send\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Typically invoked for sending Ether. Level Up has also put together a \", _jsxDEV(_components.a, {\n        href: \"(https://www.levelupweb3.xyz/solidity/transacting-ether)\",\n        children: \"guide\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 48,\n        columnNumber: 71\n      }, this), \" covering these members. The section below covers the output/responses when using these members.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `function transferKeyword(uint256 ethAmount) public {\n    // NOT recommended for sending Ether\n    // Reverts with error if txn fails\n    payable(address(this)).transfer(ethAmount);\n}\n\nfunction sendKeyword(uint256 ethAmount) public returns (bool) {\n    // NOT recommended for sending Ether\n    // Reverts with bool: \"false\" if txn fails\n    return payable(address(this)).send(ethAmount);\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"transfer\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"send\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), \" members are \", _jsxDEV(_components.em, {\n        children: \"not\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 35\n      }, this), \" recommended for sending Ether. Take note on the expected responses if you plan to use them.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In situations of failed transactions, \", _jsxDEV(_components.code, {\n        children: \"transfer\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 39\n      }, this), \" reverts with an error while \", _jsxDEV(_components.code, {\n        children: \"send\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 78\n      }, this), \" returns a boolean value of \", _jsxDEV(_components.code, {\n        children: \"false\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 112\n      }, this), \" (but the transaction will be successful).\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: [\"Note: \", _jsxDEV(_components.code, {\n          children: \"send\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), \" updates state, but \", _jsxDEV(_components.code, {\n          children: \"transfer\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 66,\n          columnNumber: 35\n        }, this), \" does not. Both members still consume gas regardless of the transaction status.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"• Call\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `function callKeyword(uint256 ethAmount) public {\n    // RECOMMENDED method to send Ether\n    // Passing blanks (\"\") because the example below shows empty calldata\n    (bool sent, ) = address(this).call{value: ethAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), \" is recommended due to its \", _jsxDEV(_components.a, {\n        href: \"https://forum.openzeppelin.com/t/should-we-never-use-the-transfer-function/38445\",\n        children: \"flexibility for sending Ether\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 80,\n        columnNumber: 34\n      }, this), \". It also allows you to pass arguments if interacting with custom functions that require any parameters.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"This concludes part 1. In the next part, we will cover other members of the address object such as \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 82,\n        columnNumber: 100\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 82,\n        columnNumber: 117\n      }, this), \". Stay tuned!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 82,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "exploring-solidity-objects-address-part-2",
    "name": "Exploring Solidity Objects: Address - Part 2",
    "index": 2,
    "summary": "Dive into the world of Solidity in pursuit of leveling up! Venturing into delegatecall and staticcall functions!",
    "author": "RH",
    "authorIcon": "https://pbs.twimg.com/profile_images/1751242830398287872/8VKShh46.jpg",
    "authorLink": "https://x.com/rh_bdl",
    "published": "Aug 06, 2024",
    "readTime": "6 min read",
    "labels": [
      "Smart Contract"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    strong: \"strong\",\n    h2: \"h2\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {ContentCopy, YoutubeEmbed} = _components;\n  if (!ContentCopy) _missingMdxReference(\"ContentCopy\", true, \"21:1-43:26\");\n  if (!YoutubeEmbed) _missingMdxReference(\"YoutubeEmbed\", true, \"51:1-51:34\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.p, {\n      children: [\"In \", _jsxDEV(_components.a, {\n        href: \"https://rhbdl.substack.com/p/exploring-solidity-objects-address?r=1v972g\",\n        children: \"Part 1\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 5,\n        columnNumber: 4\n      }, this), \", we explored different \", _jsxDEV(_components.code, {\n        children: \"address\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 5,\n        columnNumber: 110\n      }, this), \" members and their use cases. While the previous article explored scenarios involving sending Ether, it is helpful to know that the functionalities extend beyond that.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 5,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"For instance, the \", _jsxDEV(_components.code, {\n        children: \"call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 7,\n        columnNumber: 19\n      }, this), \" function is a low-level function which has the capability to invoke any function on any target contract by specifying the function signature and arguments in the \\\"data\\\" parameter. \", _jsxDEV(_components.strong, {\n        children: \"(Security Note: call never reverts. It is our responsibility to handle unsuccessful transaction errors.)\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 7,\n        columnNumber: 206\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now, let's delve into the final two members of the address object: \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 9,\n        columnNumber: 68\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 9,\n        columnNumber: 85\n      }, this), \". These members are also interchangeably referred as functions - particularly when describing their role in code execution through invocation.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 9,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The underlying concept of \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 27\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 44\n      }, this), \" is relatively straightforward, as they are essentially specialized variants of the \", _jsxDEV(_components.code, {\n        children: \"call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 142\n      }, this), \" function.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: _jsxDEV(_components.strong, {\n        children: \"1. delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 4\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This function allows state modifying instructions while preserving the original contract's context (storage, sender address, and value).\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"At this point, you might be wondering about the terminology “delegatecall”. How exactly are the function calls “delegated”? Or rather, what is the mode of “delegation” here?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's utilise the code below to answer these questions!\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `pragma solidity ^0.8.24;\n\ncontract Caller {\nuint256 public value;\n\n    function setVars(uint256 _value) public payable {\n        value = _value;\n    }\n\n}\n\ncontract DelegateCaller {\nuint256 public value;\n\n    function setVars(address _callerContract, uint256 _value) public payable {\n        // Caller delegated its setVars() function to DelegateCaller Contract\n        (bool success, ) = _callerContract.delegatecall(\n            abi.encodeWithSignature(\"setVars(uint256)\", _value)\n        );\n        if (!success) revert(\"Failed\");\n    }\n\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"When \", _jsxDEV(_components.code, {\n        children: \"setVars()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), \" is called in DelegateCaller contract, the \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 60\n      }, this), \" invokes the \", _jsxDEV(_components.code, {\n        children: \"setVars()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 87\n      }, this), \" function in the Caller contract but in the DelegateCaller execution environment.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Thus, Caller contract has effectively delegated its function to DelegateCaller contract.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let's explore further using the video below! (\", _jsxDEV(_components.strong, {\n        children: [\"Watch what happens when \", _jsxDEV(_components.code, {\n          children: \"setVars()\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 49,\n          columnNumber: 73\n        }, this), \" was called in DelegateCaller contract.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 49,\n        columnNumber: 47\n      }, this), \" Observe how the \", _jsxDEV(_components.code, {\n        children: \"value\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 49,\n        columnNumber: 142\n      }, this), \" variables change in the context of Caller and DelegateCaller contract.)\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(YoutubeEmbed, {\n      id: \"IUhr8N_WroI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.em, {\n        children: [\"Were you able to identify the contract that had its \", _jsxDEV(_components.code, {\n          children: \"value\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 53,\n          columnNumber: 54\n        }, this), \" variable updated when \", _jsxDEV(_components.code, {\n          children: \"delegatecall\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 53,\n          columnNumber: 84\n        }, this), \" was invoked?\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 53,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"This behavior might seem redundant at first when we can simply use \", _jsxDEV(_components.code, {\n        children: \"call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 55,\n        columnNumber: 68\n      }, this), \" function. However, \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 55,\n        columnNumber: 94\n      }, this), \" enables use cases such as for proxy contracts - where only the implementation contract (i.e. Uniswap V2, V3) is upgraded to preserve the context of the proxy contract.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Having explored the complexities of \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 57,\n        columnNumber: 37\n      }, this), \", let’s proceed to explore \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 57,\n        columnNumber: 78\n      }, this), \" which is relatively simpler!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: _jsxDEV(_components.strong, {\n        children: \"2. staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 4\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In general, \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), \" does not allow any state modifying instructions or capability to send ether. It will revert if there are any state changes during the function invocation.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"At a low-level, it disallows opcodes such as CREATE, SSTORE, SELFDESTRUCT, and few \", _jsxDEV(_components.a, {\n        href: \"https://www.evm.codes/#fa?fork=cancun\",\n        children: \"others\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 63,\n        columnNumber: 84\n      }, this), \". Personally, I view \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 63,\n        columnNumber: 152\n      }, this), \" as a safer variant of the call function to read state.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 63,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [_jsxDEV(\"img\", {\n        src: \"/images/contents/staticcall.png\",\n        alt: \"staticcall example\",\n        width: \"750\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 3\n      }, this), _jsxDEV(_components.p, {\n        children: _jsxDEV(_components.em, {\n          children: [\"Figure 1: \", _jsxDEV(_components.code, {\n            children: \"staticcall\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 71,\n            columnNumber: 14\n          }, this), \" example\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 71,\n          columnNumber: 3\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 71,\n        columnNumber: 3\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In the example above, notice how the \", _jsxDEV(_components.code, {\n        children: \"value\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 38\n      }, this), \" variable for StaticCaller contract did not change. It remains as “0” even when Caller contract has been updated to store “100” in its \", _jsxDEV(_components.code, {\n        children: \"value\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 180\n      }, this), \" variable. Unlike \", _jsxDEV(_components.code, {\n        children: \"delegatecall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 205\n      }, this), \" which allows state modifying instruction, \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 262\n      }, this), \" only reads state of the target contract (Caller contract in this example).\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"As a treat, I have also included a function \", _jsxDEV(_components.code, {\n        children: \"setVars()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 45\n      }, this), \" which purposefully calls a state modifying function from the target contract to simulate transaction failure. Watch the video towards the end to learn what happens when \", _jsxDEV(_components.code, {\n        children: \"success\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 226\n      }, this), \" returns false.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(YoutubeEmbed, {\n      id: \"iGQ5z6B1PQw\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: _jsxDEV(_components.p, {\n        children: _jsxDEV(_components.em, {\n          children: [\"Explore this code further here:\\n\", _jsxDEV(_components.a, {\n            href: \"https://remix.ethereum.org/?#code=Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgXjAuOC4yNDsKCmNvbnRyYWN0IENhbGxlciB7CiAgICB1aW50MjU2IHB1YmxpYyB2YWx1ZTsKCiAgICBmdW5jdGlvbiBzZXRWYXJzKHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgdmFsdWUgPSBfdmFsdWU7CiAgICB9CgogICAgZnVuY3Rpb24gcmVhZFZhbHVlKCkgcHVibGljIHZpZXcgcmV0dXJucyAodWludDI1NikgewogICAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0KfQoKY29udHJhY3QgU3RhdGljQ2FsbGVyIHsKICAgIHVpbnQyNTYgcHVibGljIHZhbHVlOwoKICAgIGZ1bmN0aW9uIHNldFZhcnMoYWRkcmVzcyBfY2FsbGVyQ29udHJhY3QsIHVpbnQyNTYgX3ZhbHVlKSBwdWJsaWMgcGF5YWJsZSB7CiAgICAgICAgKGJvb2wgc3VjY2VzcywgKSA9IF9jYWxsZXJDb250cmFjdC5zdGF0aWNjYWxsKAogICAgICAgICAgICBhYmkuZW5jb2RlV2l0aFNpZ25hdHVyZSgic2V0VmFycyh1aW50MjU2KSIsIF92YWx1ZSkKICAgICAgICApOwogICAgICAgIGlmKCFzdWNjZXNzKSByZXZlcnQgKCJFcnJvciBpbiBzdGF0aWNjYWxsIik7CiAgICB9CgogICAgZnVuY3Rpb24gcmVhZFZhcnMoYWRkcmVzcyBfY2FsbGVyQ29udHJhY3QpIHB1YmxpYyB2aWV3IHJldHVybnMgKHVpbnQyNTYpIHsKICAgICAgICAoLCBieXRlcyBtZW1vcnkgZGF0YSkgPSBfY2FsbGVyQ29udHJhY3Quc3RhdGljY2FsbChhYmkuZW5jb2RlV2l0aFNpZ25hdHVyZSgicmVhZFZhbHVlKCkiKSk7CiAgICAgICAgcmV0dXJuIGFiaS5kZWNvZGUoZGF0YSwgKHVpbnQyNTYpKTsKICAgIH0KfQ&lang=en&optimize=false&runs=200&evmVersion=null&version=soljson-v0.8.26+commit.8a97fa7a.js\",\n            children: \"staticcall.sol\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 82,\n            columnNumber: 3\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 81,\n          columnNumber: 3\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 81,\n        columnNumber: 3\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In \", _jsxDEV(_components.a, {\n        href: \"https://ethglobal.com/events/brussels/prizes/scroll\",\n        children: \"ETH CC Brussels\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 85,\n        columnNumber: 4\n      }, this), \", Scroll introduced the experimental \", _jsxDEV(_components.a, {\n        href: \"https://ethereum-magicians.org/t/rip-7728-l1sload-precompile/20388\",\n        children: \"L1SLOAD precompile\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 85,\n        columnNumber: 111\n      }, this), \" which uses \", _jsxDEV(_components.code, {\n        children: \"staticcall\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 85,\n        columnNumber: 211\n      }, this), \" under the hood.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 85,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Hackers were able to explore novel methods of resolving ENS address, extending NFT ownership - all on L2. Despite preliminary stage of experimentation, this highlights that the potential opportunities for this function are virtually limitless.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 87,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now that you have equipped yourself with an arsenal of knowledge on the \", _jsxDEV(_components.code, {\n        children: \"address\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 89,\n        columnNumber: 73\n      }, this), \" object, you are now capable of address-ing (Hehe! Pun intended) more intermediate to advanced level builds. Can't wait to hear all about how you will be using this knowledge to level up your projects.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 89,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n",
      "frontmatter": {},
      "scope": {}
    }
  }
]