{
  "id": "alchemy-mini-hack_overview",
  "title": "Hackathon Overview",
  "index": 1,
  "content": {
    "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Test and level up your skills in this one-week online hackathon brought together by \", _jsx(_components.a, {\n        href: \"https://www.alchemy.com/\",\n        children: \"Alchemy\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://scroll.io/\",\n        children: \"Scroll\"\n      }), \"! All you need to do is deploy a contract on Scroll and \", _jsx(_components.a, {\n        href: \"https://docs.alchemy.com/reference/scroll-chain-api-quickstart\",\n        children: \"leverage the Alchemy RPC via the Scroll API\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Forget product market fit, we're looking for your most creative, silly, moonshot ideas. Dream up the impossible, the ridiculous, the absolutely out-of-this-world projects and just build.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's to celebrating all you crazy, giga-brained developers ðŸ¥³\"\n    }), \"\\n\", _jsx(\"strong\", {\n      children: \"Dates\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Sept 24th to Sept 30th (submissions due September 30th, 5PM UTC)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"strong\", {\n      children: \"Find help and ask questions\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://t.me/+0tvdw8QMJBMyOTli\",\n          children: \"Level Up TG group\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
    "frontmatter": {},
    "scope": {}
  }
}